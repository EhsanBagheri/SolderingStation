/**
 * @file      hardware.h (180.ARM_Peripherals/Sources/hardware.h)
 *
 * Main header file for USBDM library.
 * Generated code is included via this file.
 *
 * @version  V4.12.1.270
 * @date     1 December 2021
 */

/*
 * *****************************
 * *** DO NOT EDIT THIS FILE ***
 * *****************************
 *
 * This file is generated automatically.
 * Any manual changes will be lost.
 */

#ifndef INCLUDE_USBDM_HARDWARE_H_
#define INCLUDE_USBDM_HARDWARE_H_

#include "error.h"
#include "pin_mapping.h"
#include "delay.h"
#include "console.h"

#include "gpio.h"
#include "pit.h"
#include "adc.h"
#include "cmp.h"
#include "vref.h"
#include "ftm.h"


namespace USBDM {

/**
 * Map all configured pins to peripheral signals.
 *
 * PCRs of allocated pins are set according to settings in Configure.usbdmProject
 *
 * @note Only the lower 16-bits of the PCR registers are initialised
 */
extern void mapAllPins();

/// Measurement ADC
typedef const Adc0                                           FixedGainAdc;                                 

/// ADC channel connected to high gain  amplifier
typedef const Adc0::Channel<0>                               HighGainAdcChannel;                           // ADC0_DP0(p7)

/// ADC channel connected to low gain  amplifier
typedef const Adc0::Channel<19>                              LowGainAdcChannel;                            // ADC0_DM0(p8)

/// Internal temperature sensor T = (25 - (Tvolts-0.719)/.001715)
typedef const Adc0::Channel<26>                              ChipTemperatureAdcChannel;                    // TEMP_SENSOR(Internal)

/// Mains zero-crossing comparator
typedef const Cmp0                                           ZeroCrossingComparator;                       

/// AC zero Crossing Detector Comparator input
typedef const Cmp0::Pin<Cmp0::Input_Ptc7>                    ZeroCrossingInput;                            // PTC7(p40)

/// Over-current comparator
typedef const Cmp1                                           OverCurrentComparator;                        

/// Over-current Detector Comparator input
typedef const Cmp1::Pin<Cmp1::Input_VrefOut>                 Overcurrent;                                  // VREF_OUT(p13)

/// FTM used for channel drive (optional)
typedef const Ftm0                                           DriveFtm;                                     

/// Spare pin for debugging
typedef const GpioTable_T<GpioAInfo, 4, ActiveHigh>          Debug;                                        // PTA4(p21)

/// Quadrature Encoder pins (Bit Field)
typedef const GpioFieldTable_T<GpioBInfo, 1, 0, ActiveLow>   QuadPhases;                                   // PTB0(p27), PTB1(p28)

/// Stand sensors (Bit Field)
typedef const GpioFieldTable_T<GpioBInfo, 17, 16, ActiveLow> Setbacks;                                     // PTB16(p31), PTB17(p32)

/// Channel 1 drive (Bit Field)
extern const GpioFieldTable_T<GpioCInfo, 2, 1, ActiveLow>    ch1Drive;                                     // PTC1(p34), PTC2(p35)

/// Channel 1 selected LED
extern const GpioTable_T<GpioCInfo, 0, ActiveHigh>           ch1SelectedLed;                               // PTC0(p33)

/// Channel 2 selected LED
extern const GpioTable_T<GpioCInfo, 6, ActiveHigh>           ch2SelectedLed;                               // PTC6(p39)

/// Controls clamp at input of amplifier chain (output of mux)
typedef const GpioTable_T<GpioCInfo, 5, ActiveHigh>          Clamp;                                        // PTC5(p38)

/// Channel 2 drive (Bit Field)
extern const GpioFieldTable_T<GpioCInfo, 4, 3, ActiveLow>    ch2Drive;                                     // PTC3(p36), PTC4(p37)

/// Quadrature encoder centre button
typedef const GpioTable_T<GpioDInfo, 0, ActiveLow>           QuadButton;                                   // PTD0(p41)

/// Channel 2 Button
typedef const GpioTable_T<GpioDInfo, 1, ActiveLow>           Ch2Button;                                    // PTD1(p42)

/// All buttons for polling (Bit Field)
typedef const GpioFieldTable_T<GpioDInfo, 3, 0, ActiveLow>   Buttons;                                      // PTD0(p41), PTD1(p42), PTD2(p43), PTD3(p44)

/// Channel 1 Button
typedef const GpioTable_T<GpioDInfo, 2, ActiveLow>           Ch1Button;                                    // PTD2(p43)

/// MenuButton
typedef const GpioTable_T<GpioDInfo, 3, ActiveLow>           MenuButton;                                   // PTD3(p44)

/// Mux&amplifier control (Bit Field)
typedef const GpioFieldTable_T<GpioDInfo, 7, 4, 0b1>         AmplifierControl;                             // PTD4(p45), PTD5(p46), PTD6(p47), PTD7(p48)

/// PIT channel to use for switch polling
typedef const Pit::Channel<0>                                PollingTimerChannel;                          // PIT_CH0(Internal)

/// PIT channel to use for sample and control timing
typedef const Pit::Channel<1>                                ControlTimerChannel;                          // PIT_CH1(Internal)

/// VREF, Voltage Reference
typedef const Vref                                           V_ref;                                        

} // End namespace USBDM

#endif /* INCLUDE_USBDM_HARDWARE_H_ */
